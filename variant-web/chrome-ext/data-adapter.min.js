VCFFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;VCFFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;VCFFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;VCFFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;function VCFFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.content=this.dataset=null;this.lines=[]}VCFFileDataAdapter.prototype.getLines=function(){return this.lines};
VCFFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,"");null!=c&&0<c.length&&(c=c.replace(/\t/g,"**%**").split("**%**"),"#"!=c[0].substr(0,1)&&this.lines.push(c))}};SIFFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;SIFFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;
function SIFFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset;this.graph={};this.graph.edges=[];this.graph.nodes=[];this.graph.relations=[]}SIFFileDataAdapter.prototype.toSIFID=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getId()+"\n",b+=d;else for(var e=d.getEdgesOut(),g=0;g<e.length;g++)d=e[g].getNodeSource().getId()+"\t--\t"+e[g].getNodeTarget().getId()+"\n",b+=d}return b};
SIFFileDataAdapter.prototype.toSIF=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getName()+"\n",b+=d;else for(var e=d.getEdgesOut(),g=0;g<e.length;g++)d=e[g].getNodeSource().getName()+"\t--\t"+e[g].getNodeTarget().getName()+"\n",b+=d}return b};SIFFileDataAdapter.prototype.toDOT=function(a){a="graph network {\n"+this.toSIF(a);return a+"}"};SIFFileDataAdapter.prototype.toDOTID=function(a){a="graph network {\n"+this.toSIFID(a);return a+"}"};
SIFFileDataAdapter.prototype.parse=function(a){for(var b=a.split("\n"),a=[],c=0;c<b.length;c++)if(0<b[c].length){var d=b[c].replace(/^\s+|\s+$/g,"").replace(/\s+/g,"**%**").split("**%**");0<d.length&&a.push(d)}b=[];d={};for(c=0;c<a.length;c++){var e=a[c][0];null==d[e]&&(b.push(e),d[e]=new Vertex(b.length-1,e,{}));for(var g=2;g<a[c].length;g++)e=a[c][g],null==d[e]&&(b.push(e),d[e]=new Vertex(b.length-1,e,{}))}for(var c=[],e=[],f=0;f<a.length;f++)for(g=2;g<a[f].length;g++){var i=a[f][0],j=a[f][g],h=
"e_"+i+"_"+j;e.push(h);h=new Edge(e.length-1,h,d[i],d[j],{type:a[f][1]});d[i].addEdge(h);d[j].addEdge(h);c.push(h.toJSON())}this.graph.edges=e;this.graph.nodes=b;this.graph.relations=c;this.dataset.loadFromJSON(this.graph)};InteractomeSIFFileDataAdapter.prototype.loadFromFile=SIFFileDataAdapter.prototype.loadFromFile;InteractomeSIFFileDataAdapter.prototype.parse=SIFFileDataAdapter.prototype.parse;InteractomeSIFFileDataAdapter.prototype.loadFromContent=SIFFileDataAdapter.prototype.loadFromContent;
function InteractomeSIFFileDataAdapter(){SIFFileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset}TabularFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;TabularFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;TabularFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;TabularFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;
function TabularFileDataAdapter(a){FileDataAdapter.prototype.constructor.call(this);this.comment=this.content=this.dataset=null;null!=a&&null!=a.comment&&(this.comment=a.comment);this.lines=[]}TabularFileDataAdapter.prototype.getLines=function(){return this.lines};TabularFileDataAdapter.prototype.getLinesCount=function(){return this.lines.length};
TabularFileDataAdapter.prototype.getValuesByColumnIndex=function(a){for(var b=[],c=0;c<this.getLinesCount();c++)null!=this.getLines()[c][a]&&b.push(this.getLines()[c][a]);return b};TabularFileDataAdapter.prototype.getHeuristicTypeByColumnIndex=function(a){return this.getHeuristicTypeByValues(this.getValuesByColumnIndex(a))};
TabularFileDataAdapter.prototype.getHeuristicTypeByValues=function(a){for(var b=/^[-+]?[0-9]*\.?[0-9]+$/,c=0;c<a.length;c++)if(!b.test((new String(a[c])).replace(",",".")))return"string";return"numeric"};
TabularFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,""),c=c.replace(/\//gi,"");if(null!=c&&0<c.length){var d=c.replace(/\t/g,"**%**").split("**%**");null==this.comment?this.lines.push(d):"#"!=c.substring(0,1)&&this.lines.push(d)}}};GFFFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;GFFFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;
GFFFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;GFFFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;function GFFFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.content=this.dataset=null;this.lines=[]}GFFFileDataAdapter.prototype.getLines=function(){return this.lines};
GFFFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,"");null!=c&&0<c.length&&(c=c.replace(/\t/g,"**%**").split("**%**"),"#"!=c[0].substr(0,1)&&this.lines.push(c))}};DotFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;DotFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;DotFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;
function DotFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset}DotFileDataAdapter.prototype._toSIFID=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getId()+"\n",b+=d;else for(var e=d.getEdgesOut(),g=0;g<e.length;g++)d=e[g].getNodeSource().getId()+" -- "+e[g].getNodeTarget().getId()+"\n",b+=d}return b};
DotFileDataAdapter.prototype._toSIF=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getName()+"\n",b+=d;else for(var e=d.getEdgesOut(),g=0;g<e.length;g++)d=e[g].getNodeSource().getName()+" -- "+e[g].getNodeTarget().getName()+"\n",b+=d}return b};DotFileDataAdapter.prototype.toDOT=function(a){a="graph network {\n"+this._toSIF(a);return a+"}"};DotFileDataAdapter.prototype.toDOTID=function(a){a="graph network {\n"+this._toSIFID(a);return a+"}"};
DotFileDataAdapter.prototype.nodeAttributesToJSON=function(a){for(var b=a.replace("[",""),b=b.replace("];","");-1!=b.indexOf(" ");)b=b.replace(" ","\u00b7");for(;-1!=b.indexOf(",\u00b7");)b=b.replace(",\u00b7"," || ");var b=b.split(" || "),c={};try{for(var d=0;d<b.length;d++){var e=b[d].split("=");if(2!=e.length){var g=b[d-1].split("=")[0];c[g]+=e[0]}else{for(;-1!=e[1].indexOf("\u00b7");)e[1]=e[1].replace("\u00b7"," ");c[e[0]]=e[1]}}}catch(f){console.log("FATAL ERROR: "+f+" Text: "+a)}return c};
DotFileDataAdapter.prototype.parse=function(a){this.parseLines(a.split("\n"))};DotFileDataAdapter.prototype.parseFromJSON=function(a){this.parseLines(a)};
DotFileDataAdapter.prototype.parseLines=function(a){for(var b=[],c=[],d={},e=[],g=0;g<a.length;g++){var f=a[g].replace(/^\s+|\s+$/g,"");if((-1!=f.indexOf("->")||-1!=f.indexOf("--"))&&-1==f.indexOf("label")){var i=f.substr(f.indexOf("["),f.indexOf("];")),j=f.replace(i,"").replace(/^\s+|\s+$/g,"").split(" "),i={};i.source=j[0];i.target=j[2];if(""!=f){if(-1!=f.indexOf("[")&&-1==f.indexOf("];")){g++;for(var h=a[g].replace(/^\s+|\s+$/g,""),f=f+h;-1==f.indexOf("];");)g++,h=a[g].replace(/^\s+|\s+$/g,""),
f+=h}h=this.nodeAttributesToJSON(f.substr(f.indexOf("["),f.indexOf("];")));i.args=h;i.args.type=j[1];b.push(i)}}else if(-1!=f.indexOf("graph"))c.push(f);else if(-1!=f.indexOf("node")&&-1!=f.indexOf("node [label="))e.push(f);else if((-1==f.indexOf("{")&&-1==f.indexOf("}")||-1!=f.indexOf("label"))&&0!=f.length){if(-1!=f.indexOf("[")&&-1==f.indexOf("];")){g++;h=a[g].replace(/^\s+|\s+$/g,"");for(f+=h;-1==f.indexOf("];");)g++,h=a[g].replace(/^\s+|\s+$/g,""),f+=h}j=f.indexOf('label="');h=f.length;if(-1!=
j)for(var m=j+=7;m<h;m++)if('"'==f[m]){var k=f.substr(j,m-j),h=m;if(-1!=k.indexOf("="))for(;-1!=k.indexOf("=");)var k=k.replace("=","-"),n=f.substr(j,m-j),f=f.replace(n,k)}h=this.nodeAttributesToJSON(f.substr(f.indexOf("["),f.indexOf("];")));f=f.substr(0,f.indexOf("[")).replace(/^\s+|\s+$/g,"");d[f]=h}}for(var l in d)null==this.dataset.getVertexByName(d[l].label)&&(void 0==d[l].label&&(d[l].label=""),this.dataset.addNode(d[l].label,d[l]));for(i in b)a=this.dataset.getVertexByName(d[b[i].source].label),
c=this.dataset.getVertexByName(d[b[i].target].label),this.dataset.addEdge(a.getId()+"_"+c.getId(),a.getId(),c.getId(),b[i].args);for(l in this.dataset.vertices){for(k=this.dataset.getVertexById(l).getName();-1!=k.indexOf('"');)k=k.replace('"',"");this.dataset.getVertexById(l).setName(k)}};InteractomeDotFileDataAdapter.prototype.loadFromFile=DotFileDataAdapter.prototype.loadFromFile;InteractomeDotFileDataAdapter.prototype.loadFromContent=DotFileDataAdapter.prototype.loadFromContent;
InteractomeDotFileDataAdapter.prototype.nodeAttributesToJSON=DotFileDataAdapter.prototype.nodeAttributesToJSON;InteractomeDotFileDataAdapter.prototype.parse=DotFileDataAdapter.prototype.parse;InteractomeDotFileDataAdapter.prototype.getDataset=DotFileDataAdapter.prototype.getDataset;InteractomeDotFileDataAdapter.prototype.parseLines=DotFileDataAdapter.prototype.parseLines;
function InteractomeDotFileDataAdapter(){DotFileDataAdapter.prototype.constructor.call(this);this.dataset=new InteractomeGraphDataset;this.layout=new LayoutDataset}
InteractomeDotFileDataAdapter.prototype.getFormatter=function(a,b){this.formatter=new NetworkDataSetFormatter({defaultFormat:{size:4,opacity:1,fill:"#FFFFFF",radius:"5",strokeWidth:"1",stroke:"#000000",title:{fontSize:10,fill:"black"}},selected:{opacity:0.9,fill:"red",radius:"5",stroke:"white"},over:{opacity:1,fill:"gray",radius:"5",stroke:"none",strokeWidth:"2"}},{defaultFormat:{opacity:1,stroke:"#000000",strokeWidth:"2",strokeOpacity:0.5,title:{fontSize:6,fontColor:"black"}},selected:{stroke:"red",
fill:"black"},over:{stroke:"blue",strokeOpacity:1,strokeWidth:"4"}},{height:500,width:a,right:b,backgroundColor:"white",balanceNodes:!1,nodesMaxSize:4,nodesMinSize:2});this.formatter.dataBind(this.dataset);for(var c in this.dataset.vertices){var d=this.dataset.vertices[c].args;"box"==d.shape&&this.formatter.changeNodeType(c,"SquareVertexNetworkFormatter");"octagon"==d.shape&&this.formatter.changeNodeType(c,"CircleVertexNetworkFormatter");"tripleoctagon"==d.shape&&this.formatter.changeNodeType(c,"EllipseVertexNetworkFormatter");
null!=d.color&&(this.formatter.getVertexById(c).getDefault().setFill(d.color),this.formatter.getVertexById(c).getOver().setFill(d.color));null!=d.size&&(this.formatter.getVertexById(c).getDefault().setSize(d.size),this.formatter.getVertexById(c).getOver().setSize(d.size))}for(var e in this.dataset.edges)d=this.dataset.edges[e].args,"--"==d.type&&this.formatter.changeEdgeType(e,"LineEdgeNetworkFormatter"),"->"==d.type&&this.formatter.changeEdgeType(e,"DirectedLineEdgeNetworkFormatter"),null!=d.arrowhead&&
"odot"==d.arrowhead&&this.formatter.changeEdgeType(e,"OdotDirectedLineEdgeNetworkFormatter"),null!=d.opacity&&this.formatter.getEdgeById(e).getDefault().setStrokeOpacity(d.opacity),null!=d.size&&this.formatter.getEdgeById(e).getDefault().setSize(d.size);return this.formatter};InteractomeDotFileDataAdapter.prototype.getLayout=function(){this.layout.dataBind(this.dataset);return this.layout};BiopaxDotFileDataAdapter.prototype.loadFromFile=DotFileDataAdapter.prototype.loadFromFile;
BiopaxDotFileDataAdapter.prototype.loadFromContent=DotFileDataAdapter.prototype.loadFromContent;BiopaxDotFileDataAdapter.prototype.nodeAttributesToJSON=DotFileDataAdapter.prototype.nodeAttributesToJSON;BiopaxDotFileDataAdapter.prototype.parse=DotFileDataAdapter.prototype.parse;BiopaxDotFileDataAdapter.prototype.getDataset=DotFileDataAdapter.prototype.getDataset;BiopaxDotFileDataAdapter.prototype.parseFromJSON=DotFileDataAdapter.prototype.parseFromJSON;
BiopaxDotFileDataAdapter.prototype.parseLines=DotFileDataAdapter.prototype.parseLines;
function BiopaxDotFileDataAdapter(){DotFileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset;this.layout=new LayoutDataset;this.formatter=new NetworkDataSetFormatter({defaultFormat:{size:3,opacity:1,fill:"#FFFFFF",radius:"5",strokeWidth:"1",stroke:"#000000",title:{fontSize:10,fill:"black"}},selected:{opacity:0.9,fill:"red",radius:"5",stroke:"white"},over:{opacity:1,fill:"gray",radius:"5",stroke:"none",strokeWidth:"2"}},{defaultFormat:{opacity:1,stroke:"#000000",strokeWidth:"2",
strokeOpacity:0.5,title:{fontSize:6,fontColor:"black"}},selected:{stroke:"red",fill:"black"},over:{stroke:"blue",strokeOpacity:1,strokeWidth:"4"}},{backgroundColor:"white",balanceNodes:!1,nodesMaxSize:4,nodesMinSize:2})}
BiopaxDotFileDataAdapter.prototype.getFormatter=function(){this.formatter.dataBind(this.dataset);for(var a in this.dataset.vertices){var b=this.dataset.vertices[a].args;b.pos.replace('"',"").replace('"',"");"box"==b.shape&&(null!=b.style?-1!=b.style.indexOf("rounded")?this.formatter.changeNodeType(a,"RoundedVertexNetworkFormatter"):(this.formatter.changeNodeType(a,"SquareVertexNetworkFormatter"),this.formatter.getVertexById(a).getDefault().setSize(this.formatter.getVertexById(a).getDefault().getSize()/
1.5)):(this.formatter.changeNodeType(a,"SquareVertexNetworkFormatter"),this.formatter.getVertexById(a).getDefault().setSize(this.formatter.getVertexById(a).getDefault().getSize()/1.5)));"octagon"==b.shape&&this.formatter.changeNodeType(a,"OctagonVertexNetworkFormatter");"ellipse"==b.shape&&this.formatter.changeNodeType(a,"EllipseVertexNetworkFormatter");"tripleoctagon"==b.shape&&this.formatter.changeNodeType(a,"EllipseVertexNetworkFormatter");null!=b.color&&(this.formatter.getVertexById(a).getDefault().setFill(b.color),
this.formatter.getVertexById(a).getOver().setFill(b.color));if(null!=b.fillcolor){for(;-1!=b.fillcolor.indexOf('"');)b.fillcolor=b.fillcolor.replace('"',"");this.formatter.getVertexById(a).getDefault().setFill(b.fillcolor);this.formatter.getVertexById(a).getOver().setFill(b.fillcolor)}}for(var c in this.dataset.edges)b=this.dataset.edges[c].args,"--"==b.type&&this.formatter.changeEdgeType(c,"LineEdgeNetworkFormatter"),"->"==b.type&&this.formatter.changeEdgeType(c,"DirectedLineEdgeNetworkFormatter"),
null!=b.arrowhead&&"odot"==b.arrowhead&&this.formatter.changeEdgeType(c,"OdotDirectedLineEdgeNetworkFormatter");return this.formatter};
BiopaxDotFileDataAdapter.prototype.getLayout=function(){this.layout.dataBind(this.dataset);var a=Infinity,b=Infinity,c=-Infinity,d=-Infinity,e;for(e in this.dataset.vertices){var g=this.dataset.vertices[e].args.pos.replace('"',""),g=g.replace('"',""),f=parseFloat(g.split(",")[0]),g=parseFloat(g.split(",")[1]);f>c&&(c=f);f<a&&(a=f);g>d&&(d=g);f<b&&(b=g)}for(e in this.dataset.vertices)g=this.dataset.vertices[e].args.pos.replace('"',""),a=0.8*(parseFloat(g.split(",")[0])/c)+0.05,b=0.8*(1-parseFloat(g.split(",")[1])/
d)+0.05,this.layout.getNodeById(e).setCoordinates(a,b);return this.layout};FileDataAdapter.prototype.toJson=DataAdapter.prototype.toJSON;FileDataAdapter.prototype.getDataset=DataAdapter.prototype.getDataset;function FileDataAdapter(){DataAdapter.prototype.constructor.call(this);this.content=this.file=null;this.onRead=new Event(this)}FileDataAdapter.prototype.loadFromFile=function(a){this.file=a;var b=this;if(a){var c=new FileReader;c.readAsText(a,"UTF-8");c.onload=function(a){b.loadFromContent(a.target.result)}}};
FileDataAdapter.prototype.loadFromContent=function(a){this.content=a;this.parse(this.content);this.onRead.notify(this)};FileDataAdapter.prototype.read=function(a){var b=this;if(a){var c=new FileReader;c.readAsText(a,"UTF-8");c.onload=function(a){this.content=a.target.result;b.onRead.notify(this)}}};FileDataAdapter.prototype.parse=function(){};BEDFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;BEDFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;
BEDFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;BEDFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;function BEDFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.content=this.dataset=null;this.lines=[]}BEDFileDataAdapter.prototype.getLines=function(){return this.lines};
BEDFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,"");null!=c&&0<c.length&&(c=c.replace(/\s+/g,"**%**").split("**%**"),"#"!=c[0].substr(0,1)&&this.lines.push(c))}};GFFLocalRegionDataAdapter.prototype.toJSON=LocalRegionDataAdapter.prototype.toJSON;GFFLocalRegionDataAdapter.prototype._getHashMapKey=LocalRegionDataAdapter.prototype._getHashMapKey;GFFLocalRegionDataAdapter.prototype.isRegionAvalaible=LocalRegionDataAdapter.prototype.isRegionAvalaible;
GFFLocalRegionDataAdapter.prototype.fill=LocalRegionDataAdapter.prototype.fill;GFFLocalRegionDataAdapter.prototype.getFinished=LocalRegionDataAdapter.prototype.getFinished;GFFLocalRegionDataAdapter.prototype.anticipateRegionRetrieved=LocalRegionDataAdapter.prototype.anticipateRegionRetrieved;GFFLocalRegionDataAdapter.prototype.setIntervalView=LocalRegionDataAdapter.prototype.setIntervalView;
function GFFLocalRegionDataAdapter(){LocalRegionDataAdapter.prototype.constructor.call(this);this.resource="gff"}GFFLocalRegionDataAdapter.prototype.getLabel=function(a){return a[2]};
GFFLocalRegionDataAdapter.prototype.loadFromFileDataAdapter=function(a){for(var b=0;b<a.lines.length;b++){var c=a.lines[b][0].replace("chr","");if(57649472==a.lines[b][3])debugger;var d={chromosome:c,label:this.getLabel(a.lines[b]),start:parseFloat(a.lines[b][3]),end:parseFloat(a.lines[b][4]),score:parseFloat(a.lines[b][5]),strand:a.lines[b][6],frame:a.lines[b][7],group:a.lines[b][8]};this.featuresSvgNode.push(d);null==this.featuresByChromosome[c]&&(this.featuresByChromosome[c]=[]);this.featuresByChromosome[c].push(d)}};
BEDLocalRegionDataAdapter.prototype.toJSON=LocalRegionDataAdapter.prototype.toJSON;BEDLocalRegionDataAdapter.prototype._getHashMapKey=LocalRegionDataAdapter.prototype._getHashMapKey;BEDLocalRegionDataAdapter.prototype.isRegionAvalaible=LocalRegionDataAdapter.prototype.isRegionAvalaible;BEDLocalRegionDataAdapter.prototype.fill=LocalRegionDataAdapter.prototype.fill;BEDLocalRegionDataAdapter.prototype.getFinished=LocalRegionDataAdapter.prototype.getFinished;
BEDLocalRegionDataAdapter.prototype.anticipateRegionRetrieved=LocalRegionDataAdapter.prototype.anticipateRegionRetrieved;BEDLocalRegionDataAdapter.prototype.setIntervalView=LocalRegionDataAdapter.prototype.setIntervalView;function BEDLocalRegionDataAdapter(){LocalRegionDataAdapter.prototype.constructor.call(this);this.resource="bed"}
BEDLocalRegionDataAdapter.prototype.loadFromFileDataAdapter=function(a){for(var b=0;b<a.lines.length;b++){var c=a.lines[b][0].replace("chr",""),d={label:a.lines[b][3],chromosome:c,start:parseFloat(a.lines[b][1]),end:parseFloat(a.lines[b][2]),score:a.lines[b][4],strand:a.lines[b][5],thickStart:a.lines[b][6],thickEnd:a.lines[b][7],itemRgb:a.lines[b][8],blockCount:a.lines[b][9],blockSizes:a.lines[b][10],blockStarts:a.lines[b][11]};this.featuresSvgNode.push(d);null==this.featuresByChromosome[c]&&(this.featuresByChromosome[c]=
[]);this.featuresByChromosome[c].push(d)}};RuleRegionDataAdapter.prototype.toJSON=DataAdapter.prototype.toJSON;
function RuleRegionDataAdapter(a){DataAdapter.prototype.constructor.call(this);this.resource="rule";this.lockSuccessEventNotify=!1;this.datasets={};this.autoFill=!0;this.pixelRatio=5.0E-6;this.space=100;this.maxChromosomeSize=26E7;null!=a&&(null!=a.autoFill&&(this.autoFill=a.autoFill),null!=a.pixelRatio&&(this.pixelRatio=a.pixelRatio));this.dataset=new DataSet;this.resource="rule";this.ratio=this.space/this.pixelRatio;this.preloadSuccess=new Event(this);this.successed=new Event;this.preloadSuccess=
new Event(this)}RuleRegionDataAdapter.prototype._getHashMapKey=function(a,b,c){return a+"-"+b+"-"+c};RuleRegionDataAdapter.prototype.isRegionAvalaible=function(a,b,c){return null!=this.datasets[this._getHashMapKey(a,b,c)]};
RuleRegionDataAdapter.prototype._getFeaturesFromRegion=function(a,b){for(var c=[],d=a;d<b;d=parseFloat(d)+parseFloat(this.ratio))if(0<=d&&d<this.maxChromosomeSize){for(var e=2;9>e;e+=2)a=parseFloat(d)+parseFloat(e*this.ratio/10),c.push({start:a,end:d+a,label:!1});1==Math.ceil(this.pixelRatio)&&(d=1E3*Math.ceil(d/1E3));c.push({start:d,end:d,label:!0})}return c};
RuleRegionDataAdapter.prototype.fill=function(a,b,c,d){this.resource=d;if(null==a||null==b||null==c)throw"Missing value in a not optional parameter: chromosome, start or end";if(this.isRegionAvalaible(a,b,c))this.lockSuccessEventNotify=!1;else{var d=[],e=[],d=this._getFeaturesFromRegion(b,c);e.push(d);this.lockSuccessEventNotify?this.anticipateRegionRetrieved(e,a,b,c):this.getFinished(e,a,b,c)}};
RuleRegionDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};RuleRegionDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=a;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
RuleRegionDataAdapter.prototype.setIntervalView=function(a,b){if(this.autoFill&&!this.lockSuccessEventNotify)for(var c in this.datasets){var d=c.split("-"),e=d[1],d=d[2];if(e<b&&b<d){var g=d-e,f=g/3;if(0>e-1||parseFloat(d)+1>this.maxChromosomeSize)break;if(b-e<f){this.lockSuccessEventNotify=!0;c=parseFloat(parseFloat(e)-parseFloat(g));this.fill(a,c,e,this.resource);break}if(d-b<f){this.lockSuccessEventNotify=!0;e=parseFloat(parseFloat(d)+parseFloat(g));this.fill(a,d,e,this.resource);break}}}};
VCFLocalRegionDataAdapter.prototype.toJSON=LocalRegionDataAdapter.prototype.toJSON;VCFLocalRegionDataAdapter.prototype._getHashMapKey=LocalRegionDataAdapter.prototype._getHashMapKey;VCFLocalRegionDataAdapter.prototype.isRegionAvalaible=LocalRegionDataAdapter.prototype.isRegionAvalaible;VCFLocalRegionDataAdapter.prototype.fill=LocalRegionDataAdapter.prototype.fill;VCFLocalRegionDataAdapter.prototype.getFinished=LocalRegionDataAdapter.prototype.getFinished;
VCFLocalRegionDataAdapter.prototype.anticipateRegionRetrieved=LocalRegionDataAdapter.prototype.anticipateRegionRetrieved;VCFLocalRegionDataAdapter.prototype.setIntervalView=LocalRegionDataAdapter.prototype.setIntervalView;function VCFLocalRegionDataAdapter(){LocalRegionDataAdapter.prototype.constructor.call(this);this.resource="vcf";this.qualitycontrol={}}VCFLocalRegionDataAdapter.prototype.getLabel=function(a){return a[2]+" "+a[3]+"/"+a[4]+" Q:"+a[5]};
VCFLocalRegionDataAdapter.prototype.addQualityControl=function(a){a=1E3*(Math.ceil(a/1E3)-1);this.qualitycontrol[a]=null==this.qualitycontrol[a]?1:this.qualitycontrol[a]+1};
VCFLocalRegionDataAdapter.prototype.loadFromFileDataAdapter=function(a){for(var b=0;b<a.lines.length;b++){this.addQualityControl(a.lines[b][5]);var c={id:a.lines[b][2],chromosome:a.lines[b][0],start:parseFloat(a.lines[b][1]),end:parseFloat(a.lines[b][1])+1,ref:a.lines[b][3],alt:a.lines[b][4],quality:a.lines[b][5],filter:a.lines[b][6],info:a.lines[b][7],format:a.lines[b][8],all:a.lines[b],label:this.getLabel(a.lines[b])};this.featuresSvgNode.push(c);null==this.featuresByChromosome[a.lines[b][0]]&&(this.featuresByChromosome[a.lines[b][0]]=
[]);this.featuresByChromosome[a.lines[b][0]].push(c)}};DasRegionDataAdapter.prototype.toJSON=DataAdapter.prototype.toJSON;function DasRegionDataAdapter(a){DataAdapter.prototype.constructor.call(this);this.datasets={};this.autoFill=!0;null!=a&&(null!=a.autoFill&&(this.autoFill=a.autoFill),null!=a.url&&(this.url=a.url));this.featuresSvgNode=[];this.xml=null;this.dataset=new DataSet;this.resource="das";this.preloadSuccess=new Event(this);this.successed=new Event;this.onError=new Event}
DasRegionDataAdapter.prototype._getHashMapKey=function(a,b,c){return a+"-"+b+"-"+c};DasRegionDataAdapter.prototype.isRegionAvalaible=function(a,b,c){return null!=this.datasets[this._getHashMapKey(a,b,c)]};
DasRegionDataAdapter.prototype.fill=function(a,b,c){var d=this;if(null==a||null==b||null==c)throw"Missing value in a not optional parameter: chromosome, start or end";var e=this.url+"?segment="+a+":"+b+","+c;if(this.isRegionAvalaible(a,b,c))return this.lockSuccessEventNotify=!1,this.datasets[this._getHashMapKey(a,b,c)];$.ajax({url:e,type:"GET",dataType:"xml",error:function(){alert("error");d.onError.notify("It is not allowed by Access-Control-Allow-Origin ")},success:function(e){try{d.xml=(new XMLSerializer).serializeToString(e);
var f=(new XMLSerializer).serializeToString(e),e=xml2json.parser(f),f=[];if(null!=e.dasgff.gff.segment.feature){for(var i=0;i<array.length;i++)e.dasgff.gff.segment.feature[i].chromosome=a;f.push(e.dasgff.gff.segment.feature)}else f.push([]);d.lockSuccessEventNotify?d.anticipateRegionRetrieved(f,a,b,c):d.getFinished(f,a,b,c)}catch(j){alert("There was a problem parsing the xml: "+j),console.log(e)}}})};
DasRegionDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};DasRegionDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=a;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
DasRegionDataAdapter.prototype.setIntervalView=function(a,b){if(this.autoFill&&!this.lockSuccessEventNotify)for(var c in this.datasets){var d=c.split("-"),a=d[0],e=d[1],d=d[2];if(e<b&&b<d){var g=(d-e)/3;if(d-b<=g){this.lockSuccessEventNotify=!0;e=parseInt(d)+parseInt(d-e);this.fill(a,d,e,this.resource);break}if(b-e<=g){this.lockSuccessEventNotify=!0;c=parseInt(e)-parseInt(d-e);this.fill(a,c,e,this.resource);break}}}};
function DataAdapter(){this.dataset=new DataSet;this.internalId=Math.round(1E7*Math.random())}DataAdapter.prototype.toJSON=function(){return this.dataset.toJSON()};DataAdapter.prototype.getDataset=function(){return this.dataset};LocalRegionDataAdapter.prototype.toJSON=DataAdapter.prototype.toJSON;
function LocalRegionDataAdapter(a){DataAdapter.prototype.constructor.call(this);this.datasets={};this.autoFill=!0;null!=a&&null!=a.autoFill&&(this.autoFill=a.autoFill);this.featuresSvgNode=[];this.dataset=new DataSet;this.resource="bed";this.featuresByChromosome={};this.loadedFromFeatures=!1;this.preloadSuccess=new Event(this);this.successed=new Event}
LocalRegionDataAdapter.prototype.loadFromFeatures=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(null!=c.chromosome&&null!=c.start&&null!=c.end){var c=c.chromosome,d=new GenericFeatureFormatter(a[b]);this.featuresSvgNode.push(c);null==this.featuresByChromosome[c]&&(this.featuresByChromosome[c]=[]);this.featuresByChromosome[c].push(d)}}this.loadedFromFeatures=!0};LocalRegionDataAdapter.prototype._getHashMapKey=function(a,b,c){return a+"-"+b+"-"+c};
LocalRegionDataAdapter.prototype.isRegionAvalaible=function(a,b,c){return null!=this.datasets[this._getHashMapKey(a,b,c)]};
LocalRegionDataAdapter.prototype.fill=function(a,b,c){if(null==a||null==b||null==c)throw"Missing value in a not optional parameter: chromosome, start or end";if(this.isRegionAvalaible(a,b,c))this.lockSuccessEventNotify=!1;else{var d=[],e=[];if(null!=this.featuresByChromosome[a])for(var g=0;g<this.featuresByChromosome[a].length;g++)this.featuresByChromosome[a][g].start<parseFloat(c)&&this.featuresByChromosome[a][g].end>parseFloat(b)&&e.push(this.featuresByChromosome[a][g]);this.loadedFromFeatures?
d=e:d[0]=e;this.lockSuccessEventNotify?this.anticipateRegionRetrieved(d,a,b,c):this.getFinished(d,a,b,c)}};LocalRegionDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};LocalRegionDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=a;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
LocalRegionDataAdapter.prototype.setIntervalView=function(a,b){if(this.autoFill&&!this.lockSuccessEventNotify)for(var c in this.datasets){var d=c.split("-"),a=d[0],e=d[1],d=d[2];if(e<b&&b<d){var g=(d-e)/3;if(d-b<=g){this.lockSuccessEventNotify=!0;e=parseInt(d)+parseInt(d-e);this.fill(a,d,e,this.resource);break}if(b-e<=g){this.lockSuccessEventNotify=!0;c=parseInt(e)-parseInt(d-e);this.fill(a,c,e,this.resource);break}}}};
