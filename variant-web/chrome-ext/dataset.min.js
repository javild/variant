InteractomeVertex.prototype.getName=Vertex.prototype.getName;InteractomeVertex.prototype.setName=Vertex.prototype.setName;InteractomeVertex.prototype.getId=Vertex.prototype.getId;InteractomeVertex.prototype.getEdges=Vertex.prototype.getEdges;InteractomeVertex.prototype.getEdgesOut=Vertex.prototype.getEdgesOut;InteractomeVertex.prototype.getEdgesIn=Vertex.prototype.getEdgesIn;InteractomeVertex.prototype.getEdgesCount=Vertex.prototype.getEdgesCount;InteractomeVertex.prototype.addEdge=Vertex.prototype.addEdge;
InteractomeVertex.prototype.addEdge=Vertex.prototype.addEdge;InteractomeVertex.prototype.removeEdge=Vertex.prototype.removeEdge;InteractomeVertex.prototype.remove=Vertex.prototype.remove;
function InteractomeVertex(a,b,c){Vertex.prototype.constructor.call(this,a,b,c);this.species="hsa";this.goCellularComponent=[];this.goMolecularFunction=[];this.goBiologicalProcess=[];this.kegg=[];this.reactome=[];this.ensemblGene=[];this.interpro=[];this.uniprotSwissprotAccession=[];this.jaspar=[];this.xrefItems=null;this.clustering=this.betweenness=this.connections="not available";this.genes=[];this.gos=[];this.onXrefRetrieved=new Event(this);this.onGOsRetrieved=new Event(this);this.onGenesRetrieved=
new Event(this)}InteractomeVertex.prototype.cleanXref=function(){this.setXrefItems(null);this.setGOs([]);this.setGenes([])};InteractomeVertex.prototype.fillXref=function(){var a=new XrefFeatureListCellBaseDataAdapter;a.setSpecies(this.species);a.fill(this.getName());var b=this;a.successed.addEventListener(function(){var c=a.toJSON();b._fillXrefItems(c);b.onXrefRetrieved.notify()})};
InteractomeVertex.prototype._fillXrefItems=function(a){if(0!=a.length){this.setXrefItems(a[0].xrefItems);for(var a=[],b=0;b<this.xrefItems.go_biological_process.length;b++)a.push(this.xrefItems.go_biological_process[b].displayName);for(b=0;b<this.xrefItems.go_molecular_function.length;b++)a.push(this.xrefItems.go_molecular_function[b].displayName);for(b=0;b<this.xrefItems.go_cellular_component.length;b++)a.push(this.xrefItems.go_cellular_component[b].displayName);for(var c=[],b=0;b<this.xrefItems.ensembl_gene.length;b++)c.push(this.xrefItems.ensembl_gene[b].displayName);
this.fillGOs(a);this.fillGenes(c)}};InteractomeVertex.prototype.fillGOs=function(a){var b=this,c=new CellBaseManager;c.setSpecies(this.species);a=this.arrayToString(a,",");""!=a?(c.get("annotation","go",a,"info"),c.successed.addEventListener(function(a,c){console.log("entron gos");b._fillGOsArray(c);b.onGOsRetrieved.notify()})):this.setGOs([])};InteractomeVertex.prototype._fillGOsArray=function(a){for(var b=0;b<a.length;b++)this.addGO(a[b])};
InteractomeVertex.prototype.fillGenes=function(a){var b=this,c=new FeatureListCellBaseDataAdapter;c.setSpecies(this.species);a=this.arrayToString(a,",");""!=a?(c.fill("gene",a),c.successed.addEventListener(function(){var a=c.toJSON();b._fillGenesArray(a);b.onGenesRetrieved.notify()})):this.setGenes([])};InteractomeVertex.prototype._fillGenesArray=function(a){for(var b=0;b<a.length;b++)this.addGene(a[b])};
InteractomeVertex.prototype.arrayToString=function(a,b){for(var c=new StringBuffer,d=0;d<a.length;d++)d!=a.length-1?c.append(a[d]+b):c.append(a[d]);return c.toString()};InteractomeVertex.prototype.setXrefItems=function(a){this.xrefItems=a;this._fillFieldsXrefItems()};InteractomeVertex.prototype._fillGOs=function(a){for(var b=0;b<a.length;b++)a[b].displayName=a[b].displayName.replace(":","_")};
InteractomeVertex.prototype._fillFieldsXrefItems=function(){null==this.xrefItems?(this.goCellularComponent=[],this.goMolecularFunction=[],this.goBiologicalProcess=[],this.kegg=[],this.reactome=[],this.ensemblGene=[],this.interpro=[],this.uniprotSwissprotAccession=[],this.jaspar=[]):(null!=this.xrefItems.go_cellular_component&&(this.goCellularComponent=this.xrefItems.go_cellular_component),null!=this.xrefItems.go_molecular_function&&(this.goMolecularFunction=this.xrefItems.go_molecular_function),null!=
this.xrefItems.go_biological_process&&(this.goBiologicalProcess=this.xrefItems.go_biological_process),null!=this.xrefItems.kegg&&(this.kegg=this.xrefItems.kegg),null!=this.xrefItems.reactome&&(this.reactome=this.xrefItems.reactome),null!=this.xrefItems.ensembl_gene&&(this.ensemblGene=this.xrefItems.ensembl_gene),null!=this.xrefItems.interpro&&(this.interpro=this.xrefItems.interpro),null!=this.xrefItems.uniprot_swissprot_accession&&(this.uniprotSwissprotAccession=this.xrefItems.uniprot_swissprot_accession),
null!=this.xrefItems.jaspar&&(this.jaspar=this.xrefItems.jaspar))};InteractomeVertex.prototype.setSpecies=function(a){this.species=a};InteractomeVertex.prototype.getSpecies=function(){return this.species};InteractomeVertex.prototype.getGOs=function(){return this.gos};InteractomeVertex.prototype.setGOs=function(a){this.gos=a};InteractomeVertex.prototype.addGO=function(a){this.gos.push(a)};InteractomeVertex.prototype.addGene=function(a){this.genes.push(a)};InteractomeVertex.prototype.getGenes=function(){return this.genes};
InteractomeVertex.prototype.setGenes=function(a){this.genes=a};InteractomeVertex.prototype.getXrefItems=function(){return this.xrefItems};InteractomeVertex.prototype.getGoCellularComponent=function(){return this.goCellularComponent};InteractomeVertex.prototype.getGoMolecularFunction=function(){return this.goMolecularFunction};InteractomeVertex.prototype.getGoBiologicalProcess=function(){return this.goBiologicalProcess};InteractomeVertex.prototype.getKegg=function(){return this.kegg};
InteractomeVertex.prototype.getReactome=function(){return this.reactome};InteractomeVertex.prototype.getEnsemblGene=function(){return this.ensemblGene};InteractomeVertex.prototype.getInterpro=function(){return this.interpro};InteractomeVertex.prototype.getUniprotSwissprotAccession=function(){return this.uniprotSwissprotAccession};InteractomeVertex.prototype.getJaspar=function(){return this.jaspar};InteractomeVertex.prototype.getConnections=function(){return this.connections};
InteractomeVertex.prototype.getBetweenness=function(){return this.betweenness};InteractomeVertex.prototype.getClustering=function(){return this.clustering};InteractomeVertex.prototype.getJaspar=function(){return this.jaspar};InteractomeVertex.prototype.setGoCellularComponent=function(a){this.goCellularComponent=a};InteractomeVertex.prototype.setGoMolecularFunction=function(a){this.goMolecularFunction=a};InteractomeVertex.prototype.setGoBiologicalProcess=function(a){this.goBiologicalProcess=a};
InteractomeVertex.prototype.setKegg=function(a){this.kegg=a};InteractomeVertex.prototype.setReactome=function(a){this.reactome=a};InteractomeVertex.prototype.setEnsemblGene=function(a){this.ensemblGene=a};InteractomeVertex.prototype.setInterpro=function(a){this.interpro=a};InteractomeVertex.prototype.setUniprotSwissprotAccession=function(a){this.uniprotSwissprotAccession=a};InteractomeVertex.prototype.setJaspar=function(a){this.jaspar=a};
InteractomeVertex.prototype.setConnections=function(a){this.connetions=a};InteractomeVertex.prototype.setBetweenness=function(a){this.betweenness=a};InteractomeVertex.prototype.setClustering=function(a){this.clustering=a};InteractomeGraphDataset.prototype.loadFromURL=GraphDataset.prototype.loadFromURL;InteractomeGraphDataset.prototype.getMaxClass=GraphDataset.prototype.getMaxClass;InteractomeGraphDataset.prototype.getVertexById=GraphDataset.prototype.getVertexById;
InteractomeGraphDataset.prototype.loadFromJSON=GraphDataset.prototype.loadFromJSON;InteractomeGraphDataset.prototype.loadFromFile=GraphDataset.prototype.loadFromFile;InteractomeGraphDataset.prototype.init=GraphDataset.prototype.init;InteractomeGraphDataset.prototype.getMinClass=GraphDataset.prototype.getMinClass;InteractomeGraphDataset.prototype.getVertices=GraphDataset.prototype.getVertices;InteractomeGraphDataset.prototype.getEdges=GraphDataset.prototype.getEdges;
InteractomeGraphDataset.prototype.getEdgeById=GraphDataset.prototype.getEdgeById;InteractomeGraphDataset.prototype.getVerticesCount=GraphDataset.prototype._getVerticesCount;InteractomeGraphDataset.prototype.getEdgesCount=GraphDataset.prototype.getEdgesCount;InteractomeGraphDataset.prototype._setEdgeEvents=GraphDataset.prototype._setEdgeEvents;InteractomeGraphDataset.prototype.loadFromJSON=GraphDataset.prototype.loadFromJSON;InteractomeGraphDataset.prototype.prettyPrint=GraphDataset.prototype.prettyPrint;
InteractomeGraphDataset.prototype._removeEdge=GraphDataset.prototype._removeEdge;InteractomeGraphDataset.prototype._removeNode=GraphDataset.prototype._removeNode;InteractomeGraphDataset.prototype.toJSON=GraphDataset.prototype.toJSON;InteractomeGraphDataset.prototype.getVertexByName=GraphDataset.prototype.getVertexByName;InteractomeGraphDataset.prototype._addVerticesIndex=GraphDataset.prototype._addVerticesIndex;InteractomeGraphDataset.prototype._getVerticesCount=GraphDataset.prototype._getVerticesCount;
InteractomeGraphDataset.prototype._connectVerticesByName=GraphDataset.prototype._connectVerticesByName;InteractomeGraphDataset.prototype.toSIF=GraphDataset.prototype.toSIF;InteractomeGraphDataset.prototype.toDOT=GraphDataset.prototype.toDOT;InteractomeGraphDataset.prototype.toSIFID=GraphDataset.prototype.toSIFID;InteractomeGraphDataset.prototype.toDOTID=GraphDataset.prototype.toDOTID;InteractomeGraphDataset.prototype._addNode=GraphDataset.prototype._addNode;
InteractomeGraphDataset.prototype.addNode=GraphDataset.prototype.addNode;function InteractomeGraphDataset(){GraphDataset.prototype.constructor.call(this);this.species="hsa";this.store=null;this.data=[];this.data.push({idNodes:"",idXref:"",displayName:"",description:"",database:"",allFields:""});this.initStore();this.onXrefRetrieved=new Event(this)}
InteractomeGraphDataset.prototype.initStore=function(){this.store=Ext.create("Ext.data.ArrayStore",{fields:[{name:"idNode",mapping:"idNode"},{name:"idXref",mapping:"idXref"},{name:"displayName",mapping:"displayName"},{name:"description",mapping:"description"},{name:"database",mapping:"database"},{name:"allFields",mapping:"allFields"}],data:this.data})};InteractomeGraphDataset.prototype._addNode=function(a,b){return new InteractomeVertex(this.getVerticesCount()-1,a,b)};
InteractomeGraphDataset.prototype._setNodeEvents=function(a){var b=this;a.deleted.addEventListener(function(a,d){b._removeNode(d)});a.nameChanged.addEventListener(function(c,d){for(var e=d.item,f=e.name,g=b.verticesIndex[d.previousName],h=0;h<g.length;h++)g[h]==e.id&&g.splice(h,1);0==g.length&&delete b.verticesIndex[d.previousName];b.json.vertices[e.id]=f;b._addVerticesIndex(f,e.id);a.cleanXref();b.vertexNameChanged.notify(d)})};
InteractomeGraphDataset.prototype.addEdge=function(a,b,c,d){this.json.edges.push(a);var e=this.getVertexById(b),f=this.getVertexById(c),g=this.getEdgesCount()-1;this.edges[g]=new InteractomeEdge(g,a,e,f,d);this.json.relations.push({index:g,sourceIndex:b,targetIndex:c,args:d});e.addEdge(this.edges[g]);f.addEdge(this.edges[g]);this._setEdgeEvents(this.edges[g]);this.newEdge.notify(this.edges[g])};InteractomeEdge.prototype.getName=Edge.prototype.getName;InteractomeEdge.prototype.setName=Edge.prototype.setName;
InteractomeEdge.prototype.getId=Edge.prototype.getId;InteractomeEdge.prototype.toJSON=Edge.prototype.toJSON;InteractomeEdge.prototype.getNodeSource=Edge.prototype.getNodeSource;InteractomeEdge.prototype.getNodeTarget=Edge.prototype.getNodeTarget;InteractomeEdge.prototype.remove=Edge.prototype.remove;function InteractomeEdge(a,b,c,d,e){Edge.prototype.constructor.call(this,a,b,c,d,e)}
function GraphDataset(){DataSet.prototype.constructor.call(this);this.edges={};this.vertices={};this.verticesIndex={};this.newVertex=new Event(this);this.vertexNameChanged=new Event(this);this.vertexDeleted=new Event(this);this.newEdge=new Event(this);this.edgeNameChanged=new Event(this);this.edgeDeleted=new Event(this);this.json={};this.json.vertices=[];this.json.edges=[];this.json.relations=[]}GraphDataset.prototype.loadFromJSON=DataSet.prototype.loadFromJSON;GraphDataset.prototype.toJSON=DataSet.prototype.toJSON;
GraphDataset.prototype.validate=DataSet.prototype.validate;GraphDataset.prototype.getMaxClass=function(){var a=0,b;for(b in this.vertices)this.vertices[b].getEdgesCount()>a&&(a=this.vertices[b].getEdgesCount());return a};GraphDataset.prototype.getMinClass=function(){var a=Math.min(),b;for(b in this.vertices)this.vertices[b].getEdgesCount()<a&&(a=this.vertices[b].getEdgesCount());return a};
GraphDataset.prototype.getVertexByName=function(a){var b=[],c;for(c in this.verticesIndex[a])return a=this.getVertexById(this.verticesIndex[a][c]),b.push(a),a;return 1>=b?this.getVertexById(this.verticesIndex[a]):b};GraphDataset.prototype.getVertexById=function(a){return this.vertices[a]};GraphDataset.prototype.toSIF=function(){return(new SIFFileDataAdapter).toSIF(this)};GraphDataset.prototype.toSIFID=function(){return(new SIFFileDataAdapter).toSIFID(this)};GraphDataset.prototype.toDOT=function(){return(new DotFileDataAdapter).toDOT(this)};
GraphDataset.prototype.toDOTID=function(){return(new DotFileDataAdapter).toDOTID(this)};GraphDataset.prototype._addNode=function(a,b){return new Vertex(this._getVerticesCount()-1,a,b)};GraphDataset.prototype.addNode=function(a,b){this.json.vertices.push(a);this._addVerticesIndex(a,this._getVerticesCount()-1);var c=this._addNode(a,b);this.vertices[this._getVerticesCount()-1]=c;this._setNodeEvents(c);this.newVertex.notify(c)};
GraphDataset.prototype._addVerticesIndex=function(a,b){null==this.verticesIndex[a]&&(this.verticesIndex[a]=[]);this.verticesIndex[a].push(b)};GraphDataset.prototype.addEdge=function(a,b,c,d){this.json.edges.push(a);var e=this.getVertexById(b),f=this.getVertexById(c),g=this.getEdgesCount()-1;this.edges[g]=new Edge(g,a,e,f,d);this.json.relations.push({index:g,sourceIndex:b,targetIndex:c,args:d});e.addEdge(this.edges[g]);f.addEdge(this.edges[g]);this._setEdgeEvents(this.edges[g]);this.newEdge.notify(this.edges[g])};
GraphDataset.prototype.getVertices=function(){return this.vertices};GraphDataset.prototype.getEdges=function(){return this.edges};GraphDataset.prototype.getEdgeById=function(a){return this.edges[a]};GraphDataset.prototype._getVerticesCount=function(){return this.json.vertices.length};GraphDataset.prototype.getVerticesCount=function(){var a=0,b;for(b in this.getVertices())a++;return a};GraphDataset.prototype.getEdgesCount=function(){return this.json.edges.length};
GraphDataset.prototype.init=function(){this.edges={};this.vertices={}};GraphDataset.prototype._setNodeEvents=function(a){var b=this;a.deleted.addEventListener(function(a,d){b._removeNode(d)});a.nameChanged.addEventListener(function(a,d){for(var e=d.item,f=e.name,g=b.verticesIndex[d.previousName],h=0;h<g.length;h++)g[h]==e.id&&g.splice(h,1);0==g.length&&delete b.verticesIndex[d.previousName];b._addVerticesIndex(f,e.id);b.json.vertices[e.id]=f;b.vertexNameChanged.notify(d)})};
GraphDataset.prototype._setEdgeEvents=function(a){var b=this;a.nameChanged.addEventListener(function(a,d){b.edgeNameChanged.notify(d)});a.deleted.addEventListener(function(a,d){b._removeEdge(d)})};GraphDataset.prototype._connectVerticesByName=function(a,b){var c=this.getVertexByName(a),d=this.getVertexByName(b);null!=c&&null!=d?this.addEdge(c.getName()+"_"+d.getName(),c.getId(),d.getId(),{}):(null==c&&console.log("No encontrado: "+a),null==d&&console.log("No encontrado: "+b))};
GraphDataset.prototype.loadFromJSON=function(a){this.init();this.json={};this.json.vertices=[];this.json.edges=[];this.json.relations=[];for(var b=0;b<a.nodes.length;b++)if(null!=a.nodes[b]){var c=a.nodes[b];this.addNode(c)}else this.json.vertices.push(null);for(b=0;b<a.edges.length;b++)null!=a.edges[b]?null!=a.relations[b]&&(c=a.edges[b],this.addEdge(c,a.relations[b].sourceIndex,a.relations[b].targetIndex,a.relations[b].args)):(this.json.edges.push(null),this.json.relations.push(null))};
GraphDataset.prototype.prettyPrint=function(){for(var a in this.vertices){console.log(this.vertices[a].getName());for(var b=0;b<this.vertices[a].getEdgesIn().length;b++)console.log("          --\> "+this.vertices[a].getEdgesIn()[b].getNodeTarget().getName())}};GraphDataset.prototype._removeEdge=function(a){this.json.edges[a.getId()]=null;this.json.relations[a.getId()]=null;delete this.edges[a.getId()];this.edgeDeleted.notify(a)};
GraphDataset.prototype._removeNode=function(a){this.json.vertices[a.getId()]=null;delete this.vertices[a.getId()];this.vertexDeleted.notify(a)};GraphDataset.prototype.toJSON=function(){var a={};a.nodes=this.json.vertices;a.edges=this.json.edges;a.relations=this.json.relations;return a};GraphDataset.prototype.clone=function(){var a=new GraphDataset;a.loadFromJSON(this.toJSON());return a};
function labels(){var a=[],b=interactomeViewer.graphEditorWidget.dataset,c=interactomeViewer.graphEditorWidget.layout,d;for(d in interactomeViewer.graphEditorWidget.dataset.getVertices())a.push(interactomeViewer.graphEditorWidget.dataset.getVertexById(d).getName());d=a.sort();console.log(d);d=0.01;for(var e=0.6,f=0;f<a.length;f++){var g=b.getVertexByName(a[f]).getId();c.getNodeById(g).setCoordenates(d,e);d=parseFloat(d)+0.03;e=parseFloat(e)+0.02;0.9800000000000003==parseFloat(e)&&(e=0.6,d-=0.51)}}
Vertex.prototype.getName=GraphItem.prototype.getName;Vertex.prototype.setName=GraphItem.prototype.setName;Vertex.prototype.getId=GraphItem.prototype.getId;function Vertex(a,b,c){GraphItem.prototype.constructor.call(this,a,b,c);this.edgesIn=[];this.edgesOut=[]}Vertex.prototype.getEdges=function(){return this.edgesIn.concat(this.edgesOut)};Vertex.prototype.getEdgesCount=function(){return this.getEdges().length};Vertex.prototype.getEdgesIn=function(){return this.edgesIn};
Vertex.prototype.getEdgesOut=function(){return this.edgesOut};Vertex.prototype.addEdge=function(a){a.getNodeSource().getId()==this.id?this.edgesIn.push(a):this.edgesOut.push(a)};Vertex.prototype.removeEdge=function(a){for(var b=0;b<this.getEdgesIn().length;b++){var c=this.edgesIn[b];c.getId()==a.getId()&&this.edgesIn.splice(b,1)}for(b=0;b<this.getEdgesOut().length;b++)c=this.edgesOut[b],c.getId()==a.getId()&&this.edgesOut.splice(b,1)};
Vertex.prototype.remove=function(){for(var a=this.getEdges(),b=0;b<a.length;b++)a[b].remove();this.deleted.notify(this)};function LayoutDataset(){this.dataset=null;this.vertices={};this.changed=new Event(this);this.layoutDone=new Event(this);this.args={};this.args.type="CIRCLE"}
LayoutDataset.prototype.loadFromJSON=function(a,b){var c=this;this.vertices={};this.dataset=a;for(var d in b)this.vertices[d]=new NodeLayout(d,b[d].x,b[d].y),this.vertices[d].changed.addEventListener(function(a,b){c.changed.notify(b)});this._attachDatasetEvents()};LayoutDataset.prototype.toJSON=function(){var a={},b;for(b in this.vertices)a[b]={},a[b].x=this.vertices[b].x,a[b].y=this.vertices[b].y;a.dataset={};a.dataset=this.dataset.toJSON();return a};
LayoutDataset.prototype.dataBind=function(a){this.dataset=a;this._attachDatasetEvents();this._calculateLayout()};LayoutDataset.prototype._removeVertex=function(a){delete this.vertices[a]};
LayoutDataset.prototype._attachDatasetEvents=function(){var a=this;this.dataset.vertexDeleted.addEventListener(function(b,c){a._removeVertex(c.getId())});this.dataset.newVertex.addEventListener(function(b,c){a.vertices[c.getId()]=new NodeLayout(c.getId(),0.5,0.5);a.vertices[c.getId()].changed.addEventListener(function(b,c){a.changed.notify(c)})})};LayoutDataset.prototype.getType=function(){return this.args.type};
LayoutDataset.prototype._calculateLayoutVertices=function(a,b){if("CIRCLE"==a){for(var c=[],d=0;d<b;d++)x=0.5+0.4*Math.sin(2*d*Math.PI/b),y=0.5+0.4*Math.cos(2*d*Math.PI/b),c.push({x:x,y:y});return c}};
LayoutDataset.prototype._calculateLayout=function(){var a=this;if("RANDOM"==this.getType())for(var b in this.dataset.getVertices())null==this.vertices[b]&&(this.vertices[b]=new NodeLayout(b,0,0)),this.vertices[b].setCoordinates(Math.random(),Math.random()),this.vertices[b].changed.addEventListener(function(b,c){a.changed.notify(c)});if("CIRCLE"==this.getType()){var c=this.dataset._getVerticesCount(),c=this._calculateLayoutVertices(this.getType(),c),d=0;for(b in this.dataset.getVertices())null==this.vertices[b]&&
(this.vertices[b]=new NodeLayout(b,0,0)),this.vertices[b].setCoordinates(c[d].x,c[d].y),d++,this.vertices[b].changed.addEventListener(function(b,c){a.changed.notify(c)})}if("SQUARE"==this.getType()){for(var c=this.dataset._getVerticesCount(),d=Math.sqrt(c),e=0.8/d,c=[],f=0;f<d;f++)for(var g=0;g<d;g++)x=f*e+0.1,y=g*e+0.1,c.push({x:x,y:y});d=0;for(b in this.dataset.getVertices())null==this.vertices[b]&&(this.vertices[b]=new NodeLayout(b,0,0)),this.vertices[b].setCoordinates(c[d].x,c[d].y),d++,this.vertices[b].changed.addEventListener(function(b,
c){a.changed.notify(c)})}};LayoutDataset.prototype.getNodeById=function(a){return this.vertices[a]};LayoutDataset.prototype.getVerticesByArea=function(a,b,c,d){var e=[],f;for(f in this.dataset.getVertices())this.vertices[f].x>=a&&this.vertices[f].x<=c&&this.vertices[f].y>=b&&this.vertices[f].y<=d&&e.push(this.vertices[f]);return e};
LayoutDataset.prototype.getLayout=function(a){if("CIRCLE"==a)this.args.type="CIRCLE",this._calculateLayout();else if("SQUARE"==a)this.args.type="SQUARE",this._calculateLayout();else if("RANDOM"==a)this.args.type="RANDOM",this._calculateLayout();else{var b=this.dataset.toDOTID(),c=this;$.ajax({async:!0,type:"POST",url:"http://bioinfo.cipf.es/utils/ws/rest/network/layout/"+a+".coords",dataType:"text",data:{dot:b},cache:!1,success:function(a){var a=JSON.parse(a),b;for(b in a)c.vertices[b].setCoordinates(0.05+
0.85*a[b].x,0.05+0.85*a[b].y);c.layoutDone.notify()}})}};function NodeLayout(a,b,c){this.id=a;this.x=b;this.y=c;this.changed=new Event(this)}NodeLayout.prototype.getId=function(){return this.id};NodeLayout.prototype.setCoordinates=function(a,b){this.x=a;this.y=b;this.changed.notify(this)};Edge.prototype.getName=GraphItem.prototype.getName;Edge.prototype.setName=GraphItem.prototype.setName;Edge.prototype.getId=GraphItem.prototype.getId;
function Edge(a,b,c,d,e){GraphItem.prototype.constructor.call(this,a,b,e);this.sourceNode=c;this.targetNode=d}Edge.prototype.toJSON=function(){return{index:this.id,sourceIndex:this.sourceNode.getId(),targetIndex:this.targetNode.getId(),args:this.args}};Edge.prototype.getNodeSource=function(){return this.sourceNode};Edge.prototype.getNodeTarget=function(){return this.targetNode};Edge.prototype.remove=function(){this.getNodeSource().removeEdge(this);this.getNodeTarget().removeEdge(this);this.deleted.notify(this)};
function GraphItem(a,b,c){this.id=a;this.name=b;this.type="NONE";this.args={};null!=c&&(this.args=c,null!=c.type&&(this.type=c.type));this.nameChanged=new Event(this);this.deleted=new Event(this)}GraphItem.prototype.getName=function(){return this.name};GraphItem.prototype.getId=function(){return this.id};GraphItem.prototype.setName=function(a){var b=this.getName();this.name=a;this.nameChanged.notify({item:this,previousName:b})};
function ExpressionMatrixDataSet(){DataSet.prototype.constructor.call(this);this.normalizedRows={};this.colorRows={};this.classesName=null;this._classMaxInterval={};this._classMinInterval={};this._json=null;this.groupByClass=!0}ExpressionMatrixDataSet.prototype.toJSON=DataSet.prototype.toJSON;ExpressionMatrixDataSet.prototype.loadFromJSON=function(a){this.validate(a)&&(this.json=a,this._json=JSON.parse(JSON.stringify(a)),this.init())};
ExpressionMatrixDataSet.prototype.getRowNameByStatisticValue=function(a,b,c){for(var a=this.getRowIndexByStatisticValue(a,b,c),b=this.getRowNames(),c=[],d=0;d<a.length;d++)c.push(b[a[d]]);return c};ExpressionMatrixDataSet.prototype.getRowIndexByStatisticValue=function(a,b,c){for(var d=this.getStatisticNames(),e=0;e<d.length;e++)if(d[e]==a){for(var a=[],d=this.getStatisticMatrix(),f=0;f<d.length;f++)d[f][e]>=b&&d[f][e]<=c&&a.push(f);return a}};
ExpressionMatrixDataSet.prototype.init=function(){this.normalizedRows={};this.colorRows={};this.classesName=null;this._classMaxInterval={};this._classMinInterval={};this.normalizeMatrix()};ExpressionMatrixDataSet.prototype.validate=function(){return!0};ExpressionMatrixDataSet.prototype.getStatisticNames=function(){return this.json.statisticMatrix.columnNames};ExpressionMatrixDataSet.prototype.getStatisticMatrix=function(){return this.json.statisticMatrix.matrix};
ExpressionMatrixDataSet.prototype.getRowNames=function(){return this.json.dataMatrix.rowNames};ExpressionMatrixDataSet.prototype.getColumnNames=function(){return this.json.dataMatrix.columnNames};ExpressionMatrixDataSet.prototype.getMatrix=function(){return this.json.dataMatrix.matrix};ExpressionMatrixDataSet.prototype.getClasses=function(){return this.json.classNames};
ExpressionMatrixDataSet.prototype.getClassesName=function(){if(null==this.classesName){var a=this.getClasses(),b=[];b.push(a[0]);this._classMinInterval[0]=0;for(var c=1;c<a.length;c++)a[c]!=b[b.length-1]&&(b.push(a[c]),this._classMaxInterval[b.length-2]=c-1,this._classMinInterval[b.length-1]=c);this._classMaxInterval[b.length-1]=a.length-1;this.classesName=b}return this.classesName};
ExpressionMatrixDataSet.prototype.getClassIntervalByIndex=function(a){null==this.classesName&&(this.classesName=this.getClassesName());return[this._classMinInterval[a],this._classMaxInterval[a]]};ExpressionMatrixDataSet.prototype.normalizeMatrix=function(){for(var a=0;a<this.getRowNames().length;a++)this.normalizedRows[a]=this.normalizedRow(a),this.colorRows[a]=this.getColorRow(a),this.classesName=this.getClassesName()};
ExpressionMatrixDataSet.prototype.normalizedRow=function(a){null==this.normalizedRows[a]&&(this.normalizedRows[a]=Normalizer.normalizeArray(this.getMatrix()[a]));return this.normalizedRows[a]};ExpressionMatrixDataSet.prototype.getNormalizedData=function(a,b){return this.normalizedRow([a])[b]};ExpressionMatrixDataSet.prototype.getColorRow=function(a){null==this.colorRows[a]&&(this.colorRows[a]=Colors.getHexStringByScoreArrayValue(this.normalizedRow(a)));return this.colorRows[a]};
ExpressionMatrixDataSet.prototype.getColor=function(a,b){return this.getColorRow(a)[b]};ExpressionMatrixDataSet.prototype.getClassesRange=function(){this.getClasses()};function DataSet(){this.json=null}DataSet.prototype.loadFromJSON=function(a){null!=a&&this.validate(a)&&(this.json=a)};DataSet.prototype.toJSON=function(){return this.json};DataSet.prototype.validate=function(){return!0};function FeatureDataSet(){DataSet.prototype.constructor.call(this)}FeatureDataSet.prototype.loadFromJSON=DataSet.prototype.loadFromJSON;
FeatureDataSet.prototype.loadFromFile=DataSet.prototype.loadFromFile;FeatureDataSet.prototype.loadFromURL=DataSet.prototype.loadFromURL;FeatureDataSet.prototype.toJSON=DataSet.prototype.toJSON;FeatureDataSet.prototype.validate=function(){return!0};function SNPFeatureDataSet(){FeatureDataSet.prototype.constructor.call(this)}SNPFeatureDataSet.prototype=FeatureDataSet;SNPFeatureDataSet.prototype.constructor=FeatureDataSet;SNPFeatureDataSet.prototype.loadFromJSON=FeatureDataSet.prototype.loadFromJSON;
SNPFeatureDataSet.prototype.loadFromFile=FeatureDataSet.prototype.loadFromFile;SNPFeatureDataSet.prototype.loadFromURL=FeatureDataSet.prototype.loadFromURL;SNPFeatureDataSet.prototype.toJSON=FeatureDataSet.prototype.toJSON;
SNPFeatureDataSet.prototype.validate=function(a){for(var a=a[0],b=0;b<a.length;b++){if(null==a[b].chromosome)throw"Data can not be validated because record "+b+" has not chromosome";if(null==a[b].start)throw"Data can not be validated because record "+b+" has not start";if(null==a[b].end)throw"Data can not be validated because record "+b+" has not end";}return!0};
